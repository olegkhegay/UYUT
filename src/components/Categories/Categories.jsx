import React, { useState, useEffect } from 'react'
import s from './Categories.module.scss'
import useMenuStore from '../../stores/menuStore'
import menuData from '../../data/menu.json'

const Categories = ({ activeCategory, onCategoryChange, disabled = false }) => {
  const [categories, setCategories] = useState([])
  
  // –ü–æ–¥–∫–ª—é—á–∞–µ–º MenuStore
  const { 
    categories: apiCategories, 
    loading, 
    errors, 
    loadCategories,
    currentCategory,
    setCurrentCategory 
  } = useMenuStore()

  useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    console.log('üîÑ Categories: Component mounted, loading categories...')
    loadCategories()
  }, [loadCategories])

  useEffect(() => {
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    let displayCategories = []
    
    if (apiCategories.length > 0) {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º API –¥–∞–Ω–Ω—ã–µ
      const allCategories = apiCategories // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      
      displayCategories = [
        { id: 'all', name: '–í—Å–µ –ø–æ–∑–∏—Ü–∏–∏', icon: 'üè†', active: activeCategory === '–í—Å–µ –ø–æ–∑–∏—Ü–∏–∏' },
        ...allCategories.map(cat => ({
          id: cat.id,
          name: cat.name,
          icon: getCategoryIcon(cat.name),
          active: cat.name === activeCategory
        }))
      ]
    } else {
      // Fallback –∫ –ª–æ–∫–∞–ª—å–Ω—ã–º –¥–∞–Ω–Ω—ã–º
      displayCategories = menuData.categories.map(cat => ({
        ...cat,
        active: cat.name === activeCategory
      }))
    }
    
    setCategories(displayCategories)
  }, [activeCategory, apiCategories])

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const getCategoryIcon = (categoryName) => {
    const iconMap = {
      '—à–∞—É—Ä–º–∞': 'üåØ',
      '–∑–∞–∫—É—Å–∫–∏': 'üçü',
      '–Ω–∞–ø–∏—Ç–∫–∏': 'ü•§',
      '–¥–µ—Å–µ—Ä—Ç—ã': 'üç∞',
      '—Å—É–ø—ã': 'üç≤',
      '—Å–∞–ª–∞—Ç—ã': 'ü•ó',
      '–≥–æ—Ä—è—á–∏–µ': 'üî•',
      '—Ö–æ–ª–æ–¥–Ω—ã–µ': '‚ùÑÔ∏è',
      '–±—É—Ä–≥–µ—Ä—ã': 'üçî',
      '–ø–∏—Ü—Ü–∞': 'üçï'
    }

    const lowerName = categoryName.toLowerCase()
    for (const [key, icon] of Object.entries(iconMap)) {
      if (lowerName.includes(key)) {
        return icon
      }
    }

    return 'üçΩÔ∏è' // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
  }

  const handleCategoryClick = (categoryName) => {
    if (!disabled) {
      onCategoryChange(categoryName)
      
      // –¢–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º store
      const category = apiCategories.find(cat => cat.name === categoryName)
      if (category) {
        setCurrentCategory(category.id)
      } else if (categoryName === '–í—Å–µ –ø–æ–∑–∏—Ü–∏–∏') {
        setCurrentCategory(null)
      }
    }
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
  if (errors.categories) {
    return (
      <div className={`${s.categories} ${s.categories_error}`}>
        <div className={s.categories__error}>
          ‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {errors.categories}
          <button onClick={() => loadCategories(true)} className={s.categories__retry}>
            –ü–æ–≤—Ç–æ—Ä–∏—Ç—å
          </button>
        </div>
      </div>
    )
  }

  return (
    <div className={`${s.categories} ${disabled ? s.categories_disabled : ''}`}>
      <div className={s.categories__wrapper}>
        {loading.categories && (
          <div className={s.categories__loading}>
            üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...
          </div>
        )}
        
        {categories.map(category => (
          <button
            key={category.id}
            className={`${s.categories__item} ${category.active ? s.categories__item_active : ''} ${disabled ? s.categories__item_disabled : ''}`}
            onClick={() => handleCategoryClick(category.name)}
            disabled={disabled || loading.categories}
          >
            <span className={s.categories__icon}>{category.icon}</span>
            <span className={s.categories__name}>{category.name}</span>
          </button>
        ))}
      </div>
    </div>
  )
}

export default Categories